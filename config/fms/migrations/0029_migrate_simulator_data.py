# Generated by Django 5.2.3 on 2025-07-31 22:45

from django.db import migrations


def migrate_simulator_data(apps, schema_editor):
    """
    Migrate simulator data from CharField to ForeignKey
    """
    SimEvaluation = apps.get_model('fms', 'SimEvaluation')
    SimulatorLog = apps.get_model('fms', 'SimulatorLog')
    Simulator = apps.get_model('fleet', 'Simulator')
    
    # Ensure Simulator records exist
    fpt_simulator, created = Simulator.objects.get_or_create(
        name='FPT',
        defaults={
            'is_active': True,
            'is_available': True,
            'hourly_rate': 130.0,
            'total_hours': 0.0,
        }
    )
    
    b737_simulator, created = Simulator.objects.get_or_create(
        name='B737',
        defaults={
            'is_active': True,
            'is_available': True,
            'hourly_rate': 130.0,
            'total_hours': 0.0,
        }
    )
    
    # Migrate SimEvaluation records
    for evaluation in SimEvaluation.objects.all():
        if evaluation.simulator == 'FPT':
            evaluation.simulator_new = fpt_simulator
        elif evaluation.simulator == 'B737':
            evaluation.simulator_new = b737_simulator
        evaluation.save()
    
    # Migrate SimulatorLog records
    for log in SimulatorLog.objects.all():
        if log.simulator == 'FPT':
            log.simulator_new = fpt_simulator
        elif log.simulator == 'B737':
            log.simulator_new = b737_simulator
        log.save()


def reverse_migrate_simulator_data(apps, schema_editor):
    """
    Reverse migration - set simulator_new to None
    """
    SimEvaluation = apps.get_model('fms', 'SimEvaluation')
    SimulatorLog = apps.get_model('fms', 'SimulatorLog')
    
    # Set simulator_new to None for all records
    SimEvaluation.objects.update(simulator_new=None)
    SimulatorLog.objects.update(simulator_new=None)


class Migration(migrations.Migration):

    dependencies = [
        ('fleet', '0005_remove_aircraft_total_cycles'),
        ('fms', '0028_migrate_simulator_to_foreign_key'),
    ]

    operations = [
        migrations.RunPython(
            migrate_simulator_data,
            reverse_migrate_simulator_data,
        ),
    ] 