# Generated by Django 5.2.3 on 2025-07-28 19:00

from django.db import migrations


def standardize_fleet_permissions(apps, schema_editor):
    """
    Standardize permission names for all fleet app models to follow consistent naming.
    """
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    
    # Get the content types for all fleet models
    aircraft_ct = ContentType.objects.get(
        app_label='fleet',
        model='aircraft'
    )
    
    aircraftavailability_ct = ContentType.objects.get(
        app_label='fleet',
        model='aircraftavailability'
    )
    
    aircrafthours_ct = ContentType.objects.get(
        app_label='fleet',
        model='aircrafthours'
    )
    
    # Define all permission updates
    permission_updates = [
        # Aircraft permissions
        (aircraft_ct, [
            ('add_aircraft', 'Can add Aeronave'),
            ('change_aircraft', 'Can change Aeronave'),
            ('delete_aircraft', 'Can delete Aeronave'),
            ('view_aircraft', 'Can view Aeronave'),
        ]),
        
        # AircraftAvailability permissions
        (aircraftavailability_ct, [
            ('add_aircraftavailability', 'Can add Disponibilidad de Aeronave'),
            ('change_aircraftavailability', 'Can change Disponibilidad de Aeronave'),
            ('delete_aircraftavailability', 'Can delete Disponibilidad de Aeronave'),
            ('view_aircraftavailability', 'Can view Disponibilidad de Aeronave'),
        ]),
        
        # AircraftHours permissions
        (aircrafthours_ct, [
            ('add_aircrafthours', 'Can add Horas de Aeronave'),
            ('change_aircrafthours', 'Can change Horas de Aeronave'),
            ('delete_aircrafthours', 'Can delete Horas de Aeronave'),
            ('view_aircrafthours', 'Can view Horas de Aeronave'),
        ]),
    ]
    
    # Update all permissions
    for content_type, permissions in permission_updates:
        for codename, name in permissions:
            try:
                permission = Permission.objects.get(
                    content_type=content_type,
                    codename=codename
                )
                permission.name = name
                permission.save()
            except Permission.DoesNotExist:
                # Permission doesn't exist, skip it
                pass


def reverse_standardize_fleet_permissions(apps, schema_editor):
    """
    Reverse the permission name updates.
    """
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    
    # Get the content types for all fleet models
    aircraft_ct = ContentType.objects.get(
        app_label='fleet',
        model='aircraft'
    )
    
    aircraftavailability_ct = ContentType.objects.get(
        app_label='fleet',
        model='aircraftavailability'
    )
    
    aircrafthours_ct = ContentType.objects.get(
        app_label='fleet',
        model='aircrafthours'
    )
    
    # Define all permission reversions
    permission_reversions = [
        # Aircraft permissions
        (aircraft_ct, [
            ('add_aircraft', 'Can add aircraft'),
            ('change_aircraft', 'Can change aircraft'),
            ('delete_aircraft', 'Can delete aircraft'),
            ('view_aircraft', 'Can view aircraft'),
        ]),
        
        # AircraftAvailability permissions
        (aircraftavailability_ct, [
            ('add_aircraftavailability', 'Can add aircraft availability'),
            ('change_aircraftavailability', 'Can change aircraft availability'),
            ('delete_aircraftavailability', 'Can delete aircraft availability'),
            ('view_aircraftavailability', 'Can view aircraft availability'),
        ]),
        
        # AircraftHours permissions
        (aircrafthours_ct, [
            ('add_aircrafthours', 'Can add aircraft hours'),
            ('change_aircrafthours', 'Can change aircraft hours'),
            ('delete_aircrafthours', 'Can delete aircraft hours'),
            ('view_aircrafthours', 'Can view aircraft hours'),
        ]),
    ]
    
    # Revert all permissions
    for content_type, permissions in permission_reversions:
        for codename, name in permissions:
            try:
                permission = Permission.objects.get(
                    content_type=content_type,
                    codename=codename
                )
                permission.name = name
                permission.save()
            except Permission.DoesNotExist:
                # Permission doesn't exist, skip it
                pass


class Migration(migrations.Migration):

    dependencies = [
        ('fleet', '0002_alter_aircrafthours_options_and_more'),
        ('auth', '__latest__'),
        ('contenttypes', '__latest__'),
    ]

    operations = [
        migrations.RunPython(
            standardize_fleet_permissions,
            reverse_standardize_fleet_permissions
        ),
    ]
