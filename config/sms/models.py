from django.db import models
from django.core.validators import MinValueValidator, MaxValueValidator

class voluntary_report(models.Model):
    """
    Voluntary Report Model for Safety Management System (SMS)
    """

    # Area Choices
    AREA_CHOICES = [
        ('ADMIN', 'Sede administrativa'),
        ('PLATFORM', 'Plataforma'),
        ('AIRPORT_OFFICE', 'Ofic. Aeropuerto'),
        ('OPERATIONS', 'Operaciones'),
        ('OTHER', 'Otro'),
    ]
    
    # Report data.
    first_name = models.CharField(
        max_length=200, 
        verbose_name="Nombre",
        blank=True,
        null=True
    )
    last_name = models.CharField(
        max_length=200, 
        verbose_name="Apellido",
        blank=True,
        null=True
    )
    role = models.CharField(
        max_length=200, 
        verbose_name="Cargo o función que ocupa en la institución",
        blank=True,
        null=True
    )
    date = models.DateField(
        verbose_name="Fecha"
    )
    time = models.TimeField(
        verbose_name="Hora"
    )

    # Area of danger.
    area = models.CharField(
        max_length=20,
        choices=AREA_CHOICES,
        default='OPERATIONS',
        verbose_name="Área del peligro"
    )

    # Description of danger.
    description = models.TextField(
        max_length=1000,
        verbose_name="Descripción del peligro"
    )

    # Report condition.
    report_condition = models.BooleanField(
        default=False,
        verbose_name="Validez del reporte"
    )
    invalid_reason = models.TextField(
        max_length=200,
        verbose_name="Motivo de invalidación",
        help_text="En caso de no ser válido explique el motivo."
    )
    
    # Received by.
    coordinator_first_name = models.CharField(
        max_length=200,
        verbose_name="Nombre"
    )
    coordinator_last_name = models.CharField(
        max_length=200,
        verbose_name="Apellido"
    )
    coordinator_id = models.IntegerField(
        validators=[MinValueValidator(999999), MaxValueValidator(100000000)],
        verbose_name='Cédula',
    )
    report_code = models.CharField(
        max_length=200,
        verbose_name="Código del reporte",
        blank=True,
        null=True
    )
    received_date = models.DateField(
        verbose_name="Fecha de recepción",
    )

    # AI analysis.
    ai_analysis = models.TextField(
        verbose_name="Análisis AI",
        blank=True,
        null=True
    )

    class Meta:
        verbose_name = "Reporte voluntario"
        verbose_name_plural = "Reportes voluntarios"
        
    def __str__(self):
        return f"{self.date} {self.area}"
    
    # AI analysis will be generated by signals when the model is saved