# Generated by Django 5.0.6 on 2025-04-03 23:26

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(choices=[('PPA', 'PPA'), ('HVI', 'HVI'), ('PCA', 'PCA'), ('IVA', 'IVA'), ('IVS', 'IVS'), ('DDV', 'DDV')], default='PPA', max_length=10, unique=True)),
                ('name', models.CharField(choices=[('Piloto Privado Avión', 'Piloto Privado Avión'), ('Habilitación Vuelo Instrumental Avión', 'Habilitación Vuelo Instrumental Avión'), ('Piloto Comercial Avión', 'Piloto Comercial Avión'), ('Instructor de Vuelo Avión', 'Instructor de Vuelo Avión'), ('Instructor de Vuelo Simulado', 'Instructor de Vuelo Simulado'), ('Despachador de Vuelo', 'Despachador de Vuelo')], default='Piloto Privado', max_length=100, unique=True)),
                ('credit_hours', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Course Type',
                'verbose_name_plural': 'Course Types',
            },
        ),
        migrations.CreateModel(
            name='CourseEdition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edition', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('time_slot', models.CharField(choices=[('MAÑANA', 'Mañana'), ('TARDE', 'Tarde'), ('NOCHE', 'Noche')], max_length=10)),
                ('students', models.ManyToManyField(blank=True, limit_choices_to={'role': 'STUDENT'}, related_name='enrolled_courses', to=settings.AUTH_USER_MODEL)),
                ('course_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editions', to='academic.coursetype')),
            ],
            options={
                'verbose_name': 'Course Edition',
                'verbose_name_plural': 'Course Editions',
                'unique_together': {('course_type', 'edition')},
            },
        ),
        migrations.CreateModel(
            name='SubjectType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(choices=[('PPA-AER-I', 'PPA-AER-I'), ('PPA-SYE-I', 'PPA-SYE-I'), ('PPA-MET-I', 'PPA-MET-I'), ('PPA-DER-I', 'PPA-DER-I'), ('PPA-NAV', 'PPA-NAV'), ('PPA-UDM', 'PPA-UDM'), ('PPA-MYC', 'PPA-MYC'), ('PPA-PRF', 'PPA-PRF'), ('PPA-RDC', 'PPA-RDC'), ('PPA-FHH', 'PPA-FHH'), ('PPA-SEG', 'PPA-SEG'), ('PPA-SPV', 'PPA-SPV'), ('PPA-PRO-I', 'PPA-PRO-I'), ('HVI-DER', 'HVI-DER'), ('HVI-SYE', 'HVI-SYE'), ('HVI-PPV', 'HVI-PPV'), ('HVI-MET', 'HVI-MET'), ('HVI-RDN', 'HVI-RDN'), ('HVI-PRO', 'HVI-PRO'), ('HVI-CAR', 'HVI-CAR'), ('PCA-AER-II', 'PCA-AER-II'), ('PCA-SYE-II', 'PCA-SYE-II'), ('PCA-MET-II', 'PCA-MET-II'), ('PCA-DER-II', 'PCA-DER-II'), ('PCA-FHH-II', 'PCA-FHH-II'), ('PCA-INST-II', 'PCA-INST-II'), ('PCA-RDN', 'PCA-RDN'), ('PCA-PRO-II', 'PCA-PRO-II'), ('PCA-SEG-II', 'PCA-SEG-II'), ('IVA-PFD', 'IVA-PFD'), ('IVA-ADE', 'IVA-ADE'), ('IVS-PFD', 'IVS-PFD'), ('IVS-ADE', 'IVS-ADE'), ('DDV-DER', 'DDV-DER'), ('DDV-ADA', 'DDV-ADA'), ('DDV-MYP', 'DDV-MYP'), ('DDV-NAV', 'DDV-NAV'), ('DDV-CTA', 'DDV-CTA'), ('DDV-MET', 'DDV-MET'), ('DDV-CMC', 'DDV-CMC'), ('DDV-TMP', 'DDV-TMP'), ('DDV-PDV', 'DDV-PDV'), ('DDV-MDV', 'DDV-MDV'), ('DDV-RDC', 'DDV-RDC'), ('DDV-FHH', 'DDV-FHH'), ('DDV-SEG', 'DDV-SEG')], max_length=50, unique=True)),
                ('name', models.CharField(choices=[('PPA-AER-I', 'PPA - Aeronáutica I'), ('PPA-SYE-I', 'PPA - Sistemas y Equipos I'), ('PPA-MET-I', 'PPA - Meteorología I'), ('PPA-DER-I', 'PPA - Derecho Aeronáutico I'), ('PPA-NAV', 'PPA - Navegación Visual'), ('PPA-UDM', 'PPA - Unidades de Medida'), ('PPA-MYC', 'PPA - Masa y Centrado'), ('PPA-PRF', 'PPA - Performance'), ('PPA-RDC', 'PPA - Radiocomunicaciones'), ('PPA-FHH', 'PPA - Factores Humanos'), ('PPA-SEG', 'PPA - Seguridad Aérea'), ('PPA-SPV', 'PPA - Supervivencia'), ('PPA-PRO-I', 'PPA - Procedimientos Operacionales I'), ('HVI-DER', 'HVI - Derecho Aeronáutico'), ('HVI-SYE', 'HVI - Sistemas y Equipos'), ('HVI-PPV', 'HVI - Performance y Planificación de Vuelo'), ('HVI-MET', 'HVI - Meteorología'), ('HVI-RDN', 'HVI - Radionavegación'), ('HVI-PRO', 'HVI - Procedimientos Operacionales'), ('HVI-CAR', 'HVI - Comunicaciones Aeronáuticas'), ('PCA-AER-II', 'PCA - Aerodinámica II'), ('PCA-SYE-II', 'PCA - Sistemas y Equipos II'), ('PCA-MET-II', 'PCA - Meteorología II'), ('PCA-DER-II', 'PCA - Derecho Aeronáutico II'), ('PCA-FHH-II', 'PCA - Factores Humanos II'), ('PCA-INST-II', 'PCA - Instrumentos II'), ('PCA-RDN', 'PCA - Radionavegación'), ('PCA-PRO-II', 'PCA - Procedimientos Operacionales II'), ('PCA-SEG-II', 'PCA - Seguridad Aérea II'), ('IVA-PFD', 'IVA - Peligros Durante la Simulación de Fallas'), ('IVA-ADE', 'IVA - Administración de la Enseñanza'), ('IVS-PFD', 'IVS - Peligros Durante la Simulación de Fallas'), ('IVS-ADE', 'IVS - Administración de la Enseñanza'), ('DDV-DER', 'DDV - Derecho Aeronáutico'), ('DDV-ADA', 'DDV - Adoctrinamiento en Aviación'), ('DDV-MYP', 'DDV - Masa y Performance de la Aeronave'), ('DDV-NAV', 'DDV - Navegación'), ('DDV-CTA', 'DDV - Control de Tránsito Aéreo'), ('DDV-MET', 'DDV - Meteorología'), ('DDV-CMC', 'DDV - Control de Masa y Centrado'), ('DDV-TMP', 'DDV - Transporte de Mercancías Peligrosas'), ('DDV-PDV', 'DDV - Planificación de Vuelo'), ('DDV-MDV', 'DDV - Monitoreo del Vuelo'), ('DDV-RDC', 'DDV - Radiocomunicaciones'), ('DDV-FHH', 'DDV - Factores Humanos'), ('DDV-SEG', 'DDV - Seguridad')], max_length=100, unique=True)),
                ('credit_hours', models.PositiveIntegerField(default=0, help_text='Horas académicas de la materia')),
                ('passing_grade', models.PositiveIntegerField(default=80, help_text='Nota mínima requerida para aprobar la materia', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('recovery_passing_grade', models.PositiveIntegerField(default=90, help_text='Nota mínima requerida para aprobar la recuperación', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('course_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='academic.coursetype')),
            ],
            options={
                'verbose_name': 'Subject Type',
                'verbose_name_plural': 'Subject Types',
            },
        ),
        migrations.CreateModel(
            name='SubjectEdition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_slot', models.CharField(choices=[('MAÑANA', 'Mañana'), ('TARDE', 'Tarde'), ('NOCHE', 'Noche')], max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('start_time', models.TimeField(default=datetime.time(9, 0))),
                ('end_time', models.TimeField(default=datetime.time(12, 30))),
                ('course_edition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='academic.courseedition')),
                ('instructor', models.ForeignKey(limit_choices_to=models.Q(('instructor_profile__instructor_type', 'TIERRA'), ('instructor_profile__instructor_type', 'DUAL'), _connector='OR'), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teaching_subjects', to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(blank=True, limit_choices_to={'student_profile__student_phase': 'TIERRA'}, related_name='enrolled_subjects', to=settings.AUTH_USER_MODEL)),
                ('subject_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='editions', to='academic.subjecttype')),
            ],
            options={
                'verbose_name': 'Subject Edition',
                'verbose_name_plural': 'Subject Editions',
            },
        ),
    ]
