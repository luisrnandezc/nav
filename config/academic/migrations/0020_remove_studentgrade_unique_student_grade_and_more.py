# Generated by Django 5.2.3 on 2025-07-16 15:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('academic', '0019_remove_studentgrade_unique_student_grade_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='studentgrade',
            name='unique_student_grade',
        ),
        migrations.RemoveField(
            model_name='studentgrade',
            name='instructor_first_name',
        ),
        migrations.RemoveField(
            model_name='studentgrade',
            name='instructor_id',
        ),
        migrations.RemoveField(
            model_name='studentgrade',
            name='instructor_last_name',
        ),
        migrations.RemoveField(
            model_name='studentgrade',
            name='student_first_name',
        ),
        migrations.RemoveField(
            model_name='studentgrade',
            name='student_id',
        ),
        migrations.RemoveField(
            model_name='studentgrade',
            name='student_last_name',
        ),
        migrations.AddField(
            model_name='studentgrade',
            name='instructor',
            field=models.ForeignKey(default=None, limit_choices_to=models.Q(('instructor_profile__instructor_type', 'TIERRA'), ('instructor_profile__instructor_type', 'DUAL'), _connector='OR'), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_grades', to=settings.AUTH_USER_MODEL, verbose_name='Instructor'),
        ),
        migrations.AddField(
            model_name='studentgrade',
            name='student',
            field=models.ForeignKey(default=None, limit_choices_to={'role': 'STUDENT'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grades', to=settings.AUTH_USER_MODEL, verbose_name='Estudiante'),
        ),
        migrations.AddConstraint(
            model_name='studentgrade',
            constraint=models.UniqueConstraint(fields=('subject_edition', 'student', 'test_type'), name='unique_student_grade', violation_error_message='Ya existe una nota para este estudiante con el mismo tipo de examen'),
        ),
    ]
