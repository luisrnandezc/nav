# Generated by Django 5.2.3 on 2025-07-28 19:00

from django.db import migrations


def update_simevaluation_permissions(apps, schema_editor):
    """
    Update the permission names for ALL evaluation models to show consistent naming.
    """
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    
    # Get the content types for all models
    simulatorlog_ct = ContentType.objects.get(
        app_label='fms',
        model='simulatorlog'
    )
    
    flightlog_ct = ContentType.objects.get(
        app_label='fms',
        model='flightlog'
    )
    
    simevaluation_ct = ContentType.objects.get(
        app_label='fms',
        model='simevaluation'
    )
    
    flightevaluation0_100_ct = ContentType.objects.get(
        app_label='fms',
        model='flightevaluation0_100'
    )
    
    flightevaluation100_120_ct = ContentType.objects.get(
        app_label='fms',
        model='flightevaluation100_120'
    )
    
    flightevaluation120_170_ct = ContentType.objects.get(
        app_label='fms',
        model='flightevaluation120_170'
    )
    
    # Define all permission updates
    permission_updates = [
        # SimulatorLog permissions
        (simulatorlog_ct, [
            ('add_simulatorlog', 'Can add Bitácora de simulador'),
            ('change_simulatorlog', 'Can change Bitácora de simulador'),
            ('delete_simulatorlog', 'Can delete Bitácora de simulador'),
            ('view_simulatorlog', 'Can view Bitácora de simulador'),
        ]),
        
        # FlightLog permissions
        (flightlog_ct, [
            ('add_flightlog', 'Can add Bitácora de vuelo'),
            ('change_flightlog', 'Can change Bitácora de vuelo'),
            ('delete_flightlog', 'Can delete Bitácora de vuelo'),
            ('view_flightlog', 'Can view Bitácora de vuelo'),
        ]),
        
        # SimEvaluation permissions
        (simevaluation_ct, [
            ('add_simevaluation', 'Can add Evaluación de simulador'),
            ('change_simevaluation', 'Can change Evaluación de simulador'),
            ('delete_simevaluation', 'Can delete Evaluación de simulador'),
            ('view_simevaluation', 'Can view Evaluación de simulador'),
        ]),
        
        # FlightEvaluation0_100 permissions
        (flightevaluation0_100_ct, [
            ('add_flightevaluation0_100', 'Can add Flight Evaluation 0-100'),
            ('change_flightevaluation0_100', 'Can change Flight Evaluation 0-100'),
            ('delete_flightevaluation0_100', 'Can delete Flight Evaluation 0-100'),
            ('view_flightevaluation0_100', 'Can view Flight Evaluation 0-100'),
        ]),
        
        # FlightEvaluation100_120 permissions
        (flightevaluation100_120_ct, [
            ('add_flightevaluation100_120', 'Can add Flight Evaluation 100-120'),
            ('change_flightevaluation100_120', 'Can change Flight Evaluation 100-120'),
            ('delete_flightevaluation100_120', 'Can delete Flight Evaluation 100-120'),
            ('view_flightevaluation100_120', 'Can view Flight Evaluation 100-120'),
        ]),
        
        # FlightEvaluation120_170 permissions
        (flightevaluation120_170_ct, [
            ('add_flightevaluation120_170', 'Can add Flight Evaluation 120-170'),
            ('change_flightevaluation120_170', 'Can change Flight Evaluation 120-170'),
            ('delete_flightevaluation120_170', 'Can delete Flight Evaluation 120-170'),
            ('view_flightevaluation120_170', 'Can view Flight Evaluation 120-170'),
        ]),
    ]
    
    # Update all permissions
    for content_type, permissions in permission_updates:
        for codename, name in permissions:
            try:
                permission = Permission.objects.get(
                    content_type=content_type,
                    codename=codename
                )
                permission.name = name
                permission.save()
            except Permission.DoesNotExist:
                # Permission doesn't exist, skip it
                pass


def reverse_update_simevaluation_permissions(apps, schema_editor):
    """
    Reverse the permission name updates (not really needed but good practice).
    """
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    
    # Get the content types for all models
    simulatorlog_ct = ContentType.objects.get(
        app_label='fms',
        model='simulatorlog'
    )
    
    flightlog_ct = ContentType.objects.get(
        app_label='fms',
        model='flightlog'
    )
    
    simevaluation_ct = ContentType.objects.get(
        app_label='fms',
        model='simevaluation'
    )
    
    flightevaluation0_100_ct = ContentType.objects.get(
        app_label='fms',
        model='flightevaluation0_100'
    )
    
    flightevaluation100_120_ct = ContentType.objects.get(
        app_label='fms',
        model='flightevaluation100_120'
    )
    
    flightevaluation120_170_ct = ContentType.objects.get(
        app_label='fms',
        model='flightevaluation120_170'
    )
    
    # Define all permission reversions
    permission_reversions = [
        # SimulatorLog permissions
        (simulatorlog_ct, [
            ('add_simulatorlog', 'Can add simulator log'),
            ('change_simulatorlog', 'Can change simulator log'),
            ('delete_simulatorlog', 'Can delete simulator log'),
            ('view_simulatorlog', 'Can view simulator log'),
        ]),
        
        # FlightLog permissions
        (flightlog_ct, [
            ('add_flightlog', 'Can add flight log'),
            ('change_flightlog', 'Can change flight log'),
            ('delete_flightlog', 'Can delete flight log'),
            ('view_flightlog', 'Can view flight log'),
        ]),
        
        # SimEvaluation permissions
        (simevaluation_ct, [
            ('add_simevaluation', 'Can add sim evaluation'),
            ('change_simevaluation', 'Can change sim evaluation'),
            ('delete_simevaluation', 'Can delete sim evaluation'),
            ('view_simevaluation', 'Can view sim evaluation'),
        ]),
        
        # FlightEvaluation0_100 permissions
        (flightevaluation0_100_ct, [
            ('add_flightevaluation0_100', 'Can add flight evaluation0_100'),
            ('change_flightevaluation0_100', 'Can change flight evaluation0_100'),
            ('delete_flightevaluation0_100', 'Can delete flight evaluation0_100'),
            ('view_flightevaluation0_100', 'Can view flight evaluation0_100'),
        ]),
        
        # FlightEvaluation100_120 permissions
        (flightevaluation100_120_ct, [
            ('add_flightevaluation100_120', 'Can add flight evaluation100_120'),
            ('change_flightevaluation100_120', 'Can change flight evaluation100_120'),
            ('delete_flightevaluation100_120', 'Can delete flight evaluation100_120'),
            ('view_flightevaluation100_120', 'Can view flight evaluation100_120'),
        ]),
        
        # FlightEvaluation120_170 permissions
        (flightevaluation120_170_ct, [
            ('add_flightevaluation120_170', 'Can add flight evaluation120_170'),
            ('change_flightevaluation120_170', 'Can change flight evaluation120_170'),
            ('delete_flightevaluation120_170', 'Can delete flight evaluation120_170'),
            ('view_flightevaluation120_170', 'Can view flight evaluation120_170'),
        ]),
    ]
    
    # Revert all permissions
    for content_type, permissions in permission_reversions:
        for codename, name in permissions:
            try:
                permission = Permission.objects.get(
                    content_type=content_type,
                    codename=codename
                )
                permission.name = name
                permission.save()
            except Permission.DoesNotExist:
                # Permission doesn't exist, skip it
                pass


class Migration(migrations.Migration):

    dependencies = [
        ('fms', '0024_remove_flightevaluation0_100_flight_date_and_more'),
        ('auth', '__latest__'),
        ('contenttypes', '__latest__'),
    ]

    operations = [
        migrations.RunPython(
            update_simevaluation_permissions,
            reverse_update_simevaluation_permissions
        ),
    ]
